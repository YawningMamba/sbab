/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jar {
	manifest {
		attributes(
				'Main-Class': 'sbab.ServerMain',
				// We need to set Multi-Release to load correct JettyHttpContainerFactory
				'Multi-Release': 'true'
		)
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}

}

dependencies {

	def jettyVersion = "11.0.6";
	def jerseyContainerVersion = "3.0.2"
	def jerseyHK2Version = jerseyContainerVersion

	implementation 'org.eclipse:yasson:2.0.2'

    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
	implementation "org.eclipse.jetty.http2:http2-server:${jettyVersion}"
	implementation "org.glassfish.jersey.inject:jersey-hk2:${jerseyHK2Version}"
	implementation "org.glassfish.jersey.containers:jersey-container-jetty-servlet:${jerseyContainerVersion}"
	implementation "org.glassfish.jersey.containers:jersey-container-jetty-http:${jerseyContainerVersion}"

	/////// These are mostly just to stop warnings on server start they are not used by project and can be removed.
	implementation 'org.slf4j:slf4j-nop:1.8.0-beta4'
	implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2'
	///////

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}
